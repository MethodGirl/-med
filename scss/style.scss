*,
*::before,
*::after {
  box-sizing: border-box;
}
/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}


/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] { fill: currentColor }
svg *[stroke] { stroke: currentColor }

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
 
 @font-face {
    font-family: "Gilroy";
    font-style: normal;
    font-weight: 700;
    src: url("../font/Gilroy-ExtraBold.otf") format("OpenType");
    font-display: swap;
  }
  
  @font-face {
    font-family: "Gilroy";
    font-style: light;
    font-weight: 300;
    src: url("../font/Gilroy-Light.otf") format("OpenType");
    font-display: swap;
  }
  
  @font-face {
    font-family: "Gilroy";
    font-style: normal;
    font-weight: 400;
    src: url("../font/gilroy-medium.ttf") format("OpenType");
    font-display: swap;
  }

:root {
  --color-blue: #4FBFA5;
  --color-dark-blue: #00868A;
  --color-light-blue: #ace2e450;
  --color-white: #FFFFFF;
  --color-black: #000000;
  --color-light-gray: #C4C4C4;

  --font-family-base: "Gilroy", sans-serif;
  --border: 1px solid var(--color-white);

  --container-width: 1295px;
  --container-padding-x: 15px;

  --transition-duration: 0.2s;
}

body {
  font-family: var(--font-family-base);
  font-size: 18px;
  line-height: 21px;
}

a {
  color: var(--color-black);
  text-decoration: none;
}

a, 
button {
  transition-duration: var(--transition-duration);
}

@import "_header";
@import "_main-section";
@import "_introduction";
@import "_offers";
@import "_footer";

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important; 
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

.poorvision-button {
  position: relative;
  text-transform: uppercase;
  width: 270px;
  text-align-last: right;
  font-size: 14px;
  line-height: 16px;
  padding: 13px 15px 11px 40px;
  border: none;
  background-color: var(--color-dark-blue);
  color: var(--color-white);
  margin-inline: 29px;
  white-space: nowrap;
}
.poorvision-button::before {
  content: "";
  background-image: url(../img/svg/poorvision.svg);
  position: absolute;
  top: 50%;
  left: 15px;
  width: 25px;
  transform: translate(0, -50%);
  height: 18px;
}

.news-plot-content{
    display: none;
}